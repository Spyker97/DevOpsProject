{"ast":null,"code":"export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue() {\n  switch (arguments.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(arguments.length <= 0 ? undefined : arguments[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  var newDate = new Date(0);\n  newDate.setFullYear.apply(newDate, arguments);\n  return newDate.setHours(0, 0, 0, 0);\n}\nexport function addDays(date, amount) {\n  var newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month → Feb 28 (not Mar 03)\n  var newDate = new Date(date);\n  var monthsToSet = newDate.getMonth() + amount;\n  var expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n  var time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  var newDate = new Date(date);\n  var expectedMonth = newDate.getMonth();\n  var time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek) {\n  var weekStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\nfunction calcWeekNum(dayOfTheWeek, sameDayOfFirstWeek) {\n  return Math.round((dayOfTheWeek - sameDayOfFirstWeek) / 604800000) + 1;\n}\n\n// Get the ISO week number of a date\nexport function getIsoWeek(date) {\n  // - Start of ISO week is Monday\n  // - Use Thursday for culculation because the first Thursday of ISO week is\n  //   always in January\n  var thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // - Week 1 in ISO week is the week including Jan 04\n  // - Use the Thu of given date's week (instead of given date itself) to\n  //   calculate week 1 of the year so that Jan 01 - 03 won't be miscalculated\n  //   as week 0 when Jan 04 is Mon - Wed\n  var firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  // return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n  return calcWeekNum(thuOfTheWeek, firstThu);\n}\n\n// Calculate week number in traditional week number system\n// @see https://en.wikipedia.org/wiki/Week#Other_week_numbering_systems\nfunction calcTraditionalWeekNumber(date, weekStart) {\n  // - Week 1 of traditional week is the week including the Jan 01\n  // - Use Jan 01 of given date's year to calculate the start of week 1\n  var startOfFirstWeek = dayOfTheWeekOf(new Date(date).setMonth(0, 1), weekStart, weekStart);\n  var startOfTheWeek = dayOfTheWeekOf(date, weekStart, weekStart);\n  var weekNum = calcWeekNum(startOfTheWeek, startOfFirstWeek);\n  if (weekNum < 53) {\n    return weekNum;\n  }\n  // If the 53rd week includes Jan 01, it's actually next year's week 1\n  var weekOneOfNextYear = dayOfTheWeekOf(new Date(date).setDate(32), weekStart, weekStart);\n  return startOfTheWeek === weekOneOfNextYear ? 1 : weekNum;\n}\n\n// Get the Western traditional week number of a date\nexport function getWesternTradWeek(date) {\n  // Start of Western traditionl week is Sunday\n  return calcTraditionalWeekNumber(date, 0);\n}\n\n// Get the Middle Eastern week number of a date\nexport function getMidEasternWeek(date) {\n  // Start of Middle Eastern week is Saturday\n  return calcTraditionalWeekNumber(date, 6);\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  var year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}\n\n// Convert date to the first/last date of the month/year of the date\nexport function regularizeDate(date, timeSpan, useLastDate) {\n  if (timeSpan !== 1 && timeSpan !== 2) {\n    return date;\n  }\n  var newDate = new Date(date);\n  if (timeSpan === 1) {\n    useLastDate ? newDate.setMonth(newDate.getMonth() + 1, 0) : newDate.setDate(1);\n  } else {\n    useLastDate ? newDate.setFullYear(newDate.getFullYear() + 1, 0, 0) : newDate.setMonth(0, 1);\n  }\n  return newDate.setHours(0, 0, 0, 0);\n}","map":{"version":3,"names":["stripTime","timeValue","Date","setHours","today","dateValue","arguments","length","undefined","newDate","setFullYear","apply","addDays","date","amount","setDate","getDate","addWeeks","addMonths","monthsToSet","getMonth","expectedMonth","time","setMonth","addYears","getFullYear","dayDiff","day","from","dayOfTheWeekOf","baseDate","dayOfWeek","weekStart","baseDay","getDay","calcWeekNum","dayOfTheWeek","sameDayOfFirstWeek","Math","round","getIsoWeek","thuOfTheWeek","firstThu","calcTraditionalWeekNumber","startOfFirstWeek","startOfTheWeek","weekNum","weekOneOfNextYear","getWesternTradWeek","getMidEasternWeek","startOfYearPeriod","years","year","floor","regularizeDate","timeSpan","useLastDate"],"sources":["C:/Users/Ahmed/Documents/GitHub/projet1/FrontEnd-micro-master/node_modules/vanillajs-datepicker/js/lib/date.js"],"sourcesContent":["export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\n\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue(...args) {\n  switch (args.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(args[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  const newDate = new Date(0);\n  newDate.setFullYear(...args);\n  return newDate.setHours(0, 0, 0, 0);\n}\n\nexport function addDays(date, amount) {\n  const newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\n\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\n\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month → Feb 28 (not Mar 03)\n  const newDate = new Date(date);\n  const monthsToSet = newDate.getMonth() + amount;\n  let expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n\n  const time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\n\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  const newDate = new Date(date);\n  const expectedMonth = newDate.getMonth();\n  const time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {\n  const baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\n\nfunction calcWeekNum(dayOfTheWeek, sameDayOfFirstWeek) {\n  return Math.round((dayOfTheWeek - sameDayOfFirstWeek) / 604800000) + 1;\n}\n\n// Get the ISO week number of a date\nexport function getIsoWeek(date) {\n  // - Start of ISO week is Monday\n  // - Use Thursday for culculation because the first Thursday of ISO week is\n  //   always in January\n  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // - Week 1 in ISO week is the week including Jan 04\n  // - Use the Thu of given date's week (instead of given date itself) to\n  //   calculate week 1 of the year so that Jan 01 - 03 won't be miscalculated\n  //   as week 0 when Jan 04 is Mon - Wed\n  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  // return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n  return calcWeekNum(thuOfTheWeek, firstThu);\n}\n\n// Calculate week number in traditional week number system\n// @see https://en.wikipedia.org/wiki/Week#Other_week_numbering_systems\nfunction calcTraditionalWeekNumber(date, weekStart) {\n  // - Week 1 of traditional week is the week including the Jan 01\n  // - Use Jan 01 of given date's year to calculate the start of week 1\n  const startOfFirstWeek = dayOfTheWeekOf(new Date(date).setMonth(0, 1), weekStart, weekStart);\n  const startOfTheWeek = dayOfTheWeekOf(date, weekStart, weekStart);\n  const weekNum = calcWeekNum(startOfTheWeek, startOfFirstWeek);\n  if (weekNum < 53) {\n    return weekNum;\n  }\n  // If the 53rd week includes Jan 01, it's actually next year's week 1\n  const weekOneOfNextYear = dayOfTheWeekOf(new Date(date).setDate(32), weekStart, weekStart);\n  return startOfTheWeek === weekOneOfNextYear ? 1 : weekNum;\n}\n\n// Get the Western traditional week number of a date\nexport function getWesternTradWeek(date) {\n  // Start of Western traditionl week is Sunday\n  return calcTraditionalWeekNumber(date, 0);\n}\n\n// Get the Middle Eastern week number of a date\nexport function getMidEasternWeek(date) {\n  // Start of Middle Eastern week is Saturday\n  return calcTraditionalWeekNumber(date, 6);\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  const year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}\n\n// Convert date to the first/last date of the month/year of the date\nexport function regularizeDate(date, timeSpan, useLastDate) {\n  if (timeSpan !== 1 && timeSpan !== 2) {\n    return date;\n  }\n  const newDate = new Date(date);\n  if (timeSpan === 1) {\n    useLastDate\n      ? newDate.setMonth(newDate.getMonth() + 1, 0)\n      : newDate.setDate(1);\n  } else {\n    useLastDate\n      ? newDate.setFullYear(newDate.getFullYear() + 1, 0, 0)\n      : newDate.setMonth(0, 1);\n  }\n  return newDate.setHours(0, 0, 0, 0);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}