{"ast":null,"code":"var defaultShortcutKeys = {\n  show: {\n    key: 'ArrowDown'\n  },\n  hide: null,\n  toggle: {\n    key: 'Escape'\n  },\n  prevButton: {\n    key: 'ArrowLeft',\n    ctrlOrMetaKey: true\n  },\n  nextButton: {\n    key: 'ArrowRight',\n    ctrlOrMetaKey: true\n  },\n  viewSwitch: {\n    key: 'ArrowUp',\n    ctrlOrMetaKey: true\n  },\n  clearButton: {\n    key: 'Backspace',\n    ctrlOrMetaKey: true\n  },\n  todayButton: {\n    key: '.',\n    ctrlOrMetaKey: true\n  },\n  exitEditMode: {\n    key: 'ArrowDown',\n    ctrlOrMetaKey: true\n  }\n};\nexport default function createShortcutKeyConfig(options) {\n  return Object.keys(defaultShortcutKeys).reduce(function (keyDefs, shortcut) {\n    var keyDef = options[shortcut] === undefined ? defaultShortcutKeys[shortcut] : options[shortcut];\n    var key = keyDef && keyDef.key;\n    if (!key || typeof key !== 'string') {\n      return keyDefs;\n    }\n    var normalizedDef = {\n      key: key,\n      ctrlOrMetaKey: !!(keyDef.ctrlOrMetaKey || keyDef.ctrlKey || keyDef.metaKey)\n    };\n    if (key.length > 1) {\n      normalizedDef.altKey = !!keyDef.altKey;\n      normalizedDef.shiftKey = !!keyDef.shiftKey;\n    }\n    keyDefs[shortcut] = normalizedDef;\n    return keyDefs;\n  }, {});\n}","map":{"version":3,"names":["defaultShortcutKeys","show","key","hide","toggle","prevButton","ctrlOrMetaKey","nextButton","viewSwitch","clearButton","todayButton","exitEditMode","createShortcutKeyConfig","options","Object","keys","reduce","keyDefs","shortcut","keyDef","undefined","normalizedDef","ctrlKey","metaKey","length","altKey","shiftKey"],"sources":["C:/Users/Ahmed/Documents/GitHub/projet1/FrontEnd-micro-master/node_modules/vanillajs-datepicker/js/options/shortcutKeys.js"],"sourcesContent":["const defaultShortcutKeys = {\n  show: {key: 'ArrowDown'},\n  hide: null,\n  toggle: {key: 'Escape'},\n  prevButton: {key: 'ArrowLeft', ctrlOrMetaKey: true},\n  nextButton: {key: 'ArrowRight', ctrlOrMetaKey: true},\n  viewSwitch: {key: 'ArrowUp', ctrlOrMetaKey: true},\n  clearButton: {key: 'Backspace', ctrlOrMetaKey: true},\n  todayButton: {key: '.', ctrlOrMetaKey: true},\n  exitEditMode: {key: 'ArrowDown', ctrlOrMetaKey: true},\n};\n\nexport default function createShortcutKeyConfig(options) {\n  return Object.keys(defaultShortcutKeys).reduce((keyDefs, shortcut) => {\n    const keyDef = options[shortcut] === undefined\n      ? defaultShortcutKeys[shortcut]\n      : options[shortcut];\n    const key = keyDef && keyDef.key;\n    if (!key || typeof key !== 'string') {\n      return keyDefs;\n    }\n\n    const normalizedDef = {\n      key,\n      ctrlOrMetaKey: !!(keyDef.ctrlOrMetaKey || keyDef.ctrlKey || keyDef.metaKey),\n    };\n    if (key.length > 1) {\n      normalizedDef.altKey = !!keyDef.altKey;\n      normalizedDef.shiftKey = !!keyDef.shiftKey;\n    }\n    keyDefs[shortcut] = normalizedDef;\n    return keyDefs;\n  }, {});\n}\n"],"mappings":"AAAA,IAAMA,mBAAmB,GAAG;EAC1BC,IAAI,EAAE;IAACC,GAAG,EAAE;EAAW,CAAC;EACxBC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE;IAACF,GAAG,EAAE;EAAQ,CAAC;EACvBG,UAAU,EAAE;IAACH,GAAG,EAAE,WAAW;IAAEI,aAAa,EAAE;EAAI,CAAC;EACnDC,UAAU,EAAE;IAACL,GAAG,EAAE,YAAY;IAAEI,aAAa,EAAE;EAAI,CAAC;EACpDE,UAAU,EAAE;IAACN,GAAG,EAAE,SAAS;IAAEI,aAAa,EAAE;EAAI,CAAC;EACjDG,WAAW,EAAE;IAACP,GAAG,EAAE,WAAW;IAAEI,aAAa,EAAE;EAAI,CAAC;EACpDI,WAAW,EAAE;IAACR,GAAG,EAAE,GAAG;IAAEI,aAAa,EAAE;EAAI,CAAC;EAC5CK,YAAY,EAAE;IAACT,GAAG,EAAE,WAAW;IAAEI,aAAa,EAAE;EAAI;AACtD,CAAC;AAED,eAAe,SAASM,uBAAuBA,CAACC,OAAO,EAAE;EACvD,OAAOC,MAAM,CAACC,IAAI,CAACf,mBAAmB,CAAC,CAACgB,MAAM,CAAC,UAACC,OAAO,EAAEC,QAAQ,EAAK;IACpE,IAAMC,MAAM,GAAGN,OAAO,CAACK,QAAQ,CAAC,KAAKE,SAAS,GAC1CpB,mBAAmB,CAACkB,QAAQ,CAAC,GAC7BL,OAAO,CAACK,QAAQ,CAAC;IACrB,IAAMhB,GAAG,GAAGiB,MAAM,IAAIA,MAAM,CAACjB,GAAG;IAChC,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MACnC,OAAOe,OAAO;IAChB;IAEA,IAAMI,aAAa,GAAG;MACpBnB,GAAG,EAAHA,GAAG;MACHI,aAAa,EAAE,CAAC,EAAEa,MAAM,CAACb,aAAa,IAAIa,MAAM,CAACG,OAAO,IAAIH,MAAM,CAACI,OAAO;IAC5E,CAAC;IACD,IAAIrB,GAAG,CAACsB,MAAM,GAAG,CAAC,EAAE;MAClBH,aAAa,CAACI,MAAM,GAAG,CAAC,CAACN,MAAM,CAACM,MAAM;MACtCJ,aAAa,CAACK,QAAQ,GAAG,CAAC,CAACP,MAAM,CAACO,QAAQ;IAC5C;IACAT,OAAO,CAACC,QAAQ,CAAC,GAAGG,aAAa;IACjC,OAAOJ,OAAO;EAChB,CAAC,EAAE,CAAC,CAAC,CAAC;AACR"},"metadata":{},"sourceType":"module"}